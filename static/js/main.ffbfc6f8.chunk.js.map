{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/services/services.ts","api/todos.ts","components/TodoForm/todoForm.tsx","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","defaultTodos","TodoForm","onAdd","useState","setTitle","setUser","touched","setTouched","action","method","onSubmit","event","preventDefault","type","value","onChange","target","defaultValue","u","getNewTodoId","Math","max","post","App","setTodos","newTodo","newT","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffbfc6f8.chunk.js","sourcesContent":["import { User } from '../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={todo.completed\n      ? 'TodoInfo TodoInfo--completed'\n      : 'TodoInfo'}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = { todos: Todo[]; };\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\nimport todosFromServer from '../../api/todos';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || usersFromServer[0];\n}\n\nexport const defaultTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../types/User';\nimport { getUserById } from '../services/services';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [touched, setTouched] = useState(false);\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setTouched(true);\n\n    if (user && title) {\n      onAdd({\n        id: 0,\n        title,\n        completed: false,\n        userId: user,\n        user: getUserById(user),\n      });\n\n      setTitle('');\n      setUser(0);\n      setTouched(false);\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n        />\n        {\n          !title && touched\n            && (<span className=\"error\">Please enter a title</span>)\n        }\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          onChange={event => setUser(+event.target.value)}\n          defaultValue={0}\n          value={user}\n        >\n          <option value=\"0\">Choose a user</option>\n          {usersFromServer.map((u: User) => (\n            <option value={u.id} key={u.id}>{u.name}</option>\n          ))}\n        </select>\n\n        {\n          !user && touched\n            && (<span className=\"error\">Please choose a user</span>)\n        }\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/todoForm';\nimport { Todo } from './components/types/Todo';\nimport { defaultTodos } from './components/services/services';\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(post => post.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(defaultTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    const newT = {\n      ...newTodo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newT]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}